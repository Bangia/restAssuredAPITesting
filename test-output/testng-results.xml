<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-08T15:44:57Z" name="Default suite" finished-at="2021-10-08T15:45:03Z" duration-ms="6919">
    <groups>
    </groups>
    <test started-at="2021-10-08T15:44:57Z" name="Default test" finished-at="2021-10-08T15:45:03Z" duration-ms="6919">
      <class name="com.employee.framework.TC002_Get_Single_Employee_Record">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.employee.framework.TC002_Get_Single_Employee_Record@6253c26]" started-at="2021-10-08T15:44:57Z" name="setup" finished-at="2021-10-08T15:44:57Z" duration-ms="305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="get_Single_Employee_By_empId()[pri:0, instance:com.employee.framework.TC002_Get_Single_Employee_Record@6253c26]" started-at="2021-10-08T15:44:57Z" name="get_Single_Employee_By_empId" finished-at="2021-10-08T15:45:03Z" duration-ms="6334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_Single_Employee_By_empId -->
        <test-method signature="checkContentLength()[pri:0, instance:com.employee.framework.TC002_Get_Single_Employee_Record@6253c26]" started-at="2021-10-08T15:45:03Z" name="checkContentLength" finished-at="2021-10-08T15:45:03Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method signature="checkContentType()[pri:0, instance:com.employee.framework.TC002_Get_Single_Employee_Record@6253c26]" started-at="2021-10-08T15:45:03Z" name="checkContentType" finished-at="2021-10-08T15:45:03Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employee.framework.TC002_Get_Single_Employee_Record@6253c26]" started-at="2021-10-08T15:45:03Z" name="checkResponseBody" finished-at="2021-10-08T15:45:03Z" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:com.employee.framework.TC002_Get_Single_Employee_Record@6253c26]" started-at="2021-10-08T15:45:03Z" name="checkResponseTime" finished-at="2021-10-08T15:45:03Z" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.employee.framework.TC002_Get_Single_Employee_Record.checkResponseTime(TC002_Get_Single_Employee_Record.java:58)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkServerType()[pri:0, instance:com.employee.framework.TC002_Get_Single_Employee_Record@6253c26]" started-at="2021-10-08T15:45:03Z" name="checkServerType" finished-at="2021-10-08T15:45:03Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employee.framework.TC002_Get_Single_Employee_Record@6253c26]" started-at="2021-10-08T15:45:03Z" name="checkStatusCode" finished-at="2021-10-08T15:45:03Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employee.framework.TC002_Get_Single_Employee_Record@6253c26]" started-at="2021-10-08T15:45:03Z" name="checkStatusLine" finished-at="2021-10-08T15:45:03Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employee.framework.TC002_Get_Single_Employee_Record@6253c26]" started-at="2021-10-08T15:45:03Z" name="tearDown" finished-at="2021-10-08T15:45:03Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employee.framework.TC002_Get_Single_Employee_Record -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
